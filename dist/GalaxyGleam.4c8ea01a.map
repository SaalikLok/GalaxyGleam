{"version":3,"sources":["game/Menu.js","game/FullGame.js","index.js"],"names":["background","menuMusic","Menu","Phaser","Scene","call","load","image","audio","add","music","sound","setLoop","play","button","text","setInteractive","on","stop","scene","start","blue","bigAstroid","meteor","transitionSector","sector1Music","level","cursors","player","asteroids","bigastr","delayLv0","Math","Between","delayLv1","delayLv2","delayLv3","FullGame","transitionMusic","sendingEnemies","time","addEvent","delay","callback","sendAsteroid","callbackScope","loop","sendingBigAstr","sendbigAstr","physics","input","keyboard","createCursorKeys","setDamping","setDrag","setMaxVelocity","body","collideWorldBounds","bounce","set","up","isDown","velocityFromRotation","rotation","acceleration","setAcceleration","left","setAngularVelocity","right","group","key","repeat","setXY","x","y","stepY","children","iterate","child","velocity","setTo","collider","hitEnemy","console","log","pause","setTint","gameOver","config","type","AUTO","width","height","default","arcade","fps","gravity","game","Game"],"mappings":"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","file":"GalaxyGleam.4c8ea01a.map","sourceRoot":"..","sourcesContent":["const background = './game/assets/menu.png';\nconst menuMusic = './game/audio/mainMenu.mp3';\n\nexport class Menu extends Phaser.Scene{\n    constructor(){\n        super();\n        Phaser.Scene.call(this, 'menu');\n    }\n\n    preload(){\n        this.load.image('background', background);\n        this.load.audio('menuMusic', menuMusic);\n    }\n\n    create(){\n        this.add.image(640, 360, 'background');\n        \n        var music = this.sound.add('menuMusic');\n        music.setLoop(true);\n        music.play();\n\n        var button = this.add.text(100, 100, \"Play\");\n        button.setInteractive();\n        button.on('pointerdown', function(){\n            music.stop();\n            this.scene.start('game');\n        }, this);\n    }\n\n    goToGame() {\n        this.scene.start('game');\n    }\n}","const background = ('./game/assets/menu.png');\nconst blue = ('./game/assets/blue.png');\nconst bigAstroid = ('./game/assets/bigastr.png');\nconst meteor = ('./game/assets/meteor.png');\n\n//Sounds\nconst transitionSector = ('./game/audio/tsector1.mp3');\nconst sector1Music = ('./game/audio/sector1.mp3');\n\n//Instance variables\nlet level = 1;\nlet cursors;\nlet player;\n\n//Enemy instance variables\nlet asteroids;\nlet bigastr;\n\n//Delay Timings\nvar delayLv0 = Phaser.Math.Between(15000, 20000);\nvar delayLv1 = Phaser.Math.Between(2500, 4000);\nvar delayLv2 = Phaser.Math.Between(1000, 2000);\nvar delayLv3 = Phaser.Math.Between(750, 1500);\n\nexport class FullGame extends Phaser.Scene{\n    constructor(){\n        super();\n        Phaser.Scene.call(this, 'game');\n    }\n\n    preload(){\n        this.load.image('background', background);\n        this.load.image('blue', blue);\n        this.load.image('meteor', meteor);\n        this.load.image('bigastr', bigAstroid);\n        this.load.audio('sector1', sector1Music);\n        this.load.audio('transitionSector', transitionSector);\n    }\n\n    create(){\n         //Background Creation\n         this.add.image(640, 360, 'background');\n        \n         //Level Init - enemies and music\n         var music;\n         if (level == 1){\n             var transitionMusic = this.sound.add('transitionSector');\n             transitionMusic.play();\n \n             /*music = this.sound.add('sector1');\n             music.setLoop(true);\n             music.play();*/\n \n             sendingEnemies = this.time.addEvent({ delay: delayLv1, callback: sendAsteroid, callbackScope: this, loop: true});\n             sendingBigAstr = this.time.addEvent({ delay: delayLv0, callback: sendbigAstr, callbackScope: this, loop: true});\n         }\n         else if(level == 2){\n \n         }\n         else{\n \n         }\n         \n         //Create Player and Controls\n         player = this.physics.add.image(50, 360, 'meteor');\n         cursors = this.input.keyboard.createCursorKeys();\n \n         player.setDamping(true);\n         player.setDrag(0.99);\n         player.setMaxVelocity(200);\n         player.body.collideWorldBounds = true;\n         player.body.bounce.set(1);\n    }\n\n    update(){\n        if (cursors.up.isDown){\n            this.physics.velocityFromRotation(player.rotation, 200, player.body.acceleration);\n        }\n        else{\n            player.setAcceleration(0);\n        }\n\n        if (cursors.left.isDown){\n            player.setAngularVelocity(-300);\n        }\n        else if (cursors.right.isDown){\n            player.setAngularVelocity(300);\n        }\n        else{\n            player.setAngularVelocity(0);\n        }\n    }\n\n    sendAsteroid(){\n        asteroids = this.physics.add.group({\n            key: 'blue',\n            repeat: Phaser.Math.Between(0, 1),\n            setXY: {x: 1400, y: Phaser.Math.Between(50, 600), stepY: Phaser.Math.Between(75, 250)}\n        });\n    \n        asteroids.children.iterate(function(child){\n            child.body.velocity.setTo(Phaser.Math.Between(-175, -100), 0);\n        })\n    \n        this.physics.add.collider(player, asteroids, hitEnemy, null, this);\n    }\n    \n    sendbigAstr(){\n        bigastr = this.physics.add.group({\n            key: 'bigAstr',\n            repeat: 0,\n            setXY: {x: 1400, y: Phaser.Math.Between(50, 600), stepY: Phaser.Math.Between(75, 250)}\n        });\n    \n        bigastr.children.iterate(function(child){\n            child.body.velocity.setTo(Phaser.Math.Between(-100, -50), 0);\n        })\n    \n        this.physics.add.collider(player, asteroids, hitEnemy, null, this);\n    \n    }\n    \n    hitEnemy(){\n        console.log(\"enemy hit\");\n        this.physics.pause();\n    \n        player.setTint(0xff0000);\n    \n        gameOver = true;\n    }\n}","import Menu from './game/Menu';\nimport FullGame from './game/FullGame';\n\n/*\n//Assets\nvar background = require('./game/assets/menu.png');\nvar blue = require('./game/assets/blue.png');\nvar bigAstroid = require('./game/assets/bigastr.png');\nvar meteor = require('./game/assets/meteor.png');\n\n//Sounds\nvar menuMusic = require('./game/audio/mainMenu.mp3');\nvar transitionSector = require('./game/audio/tsector1.mp3');\nvar sector1Music = require('./game/audio/sector1.mp3');\n\n//Instance variables\nvar level = 1;\nvar cursors;\nvar player;\n\n//Enemy instance variables\nvar asteroids;\nvar bigastr;\n\n//Delay Timings\nvar delayLv0 = Phaser.Math.Between(15000, 20000);\nvar delayLv1 = Phaser.Math.Between(2500, 4000);\nvar delayLv2 = Phaser.Math.Between(1000, 2000);\nvar delayLv3 = Phaser.Math.Between(750, 1500);\n*/\n/*var Menu = new Phaser.Class({\n    Extends: Phaser.Scene,\n    \n    initialize:\n    function Menu(){\n        Phaser.Scene.call(this, 'menu');\n    },\n\n    preload: function(){\n        this.load.image('background', background);\n        this.load.audio('menuMusic', menuMusic);\n    },\n\n    goToGame: function(){\n        this.scene.start('game');\n    },\n\n    create: function(){\n        this.add.image(640, 360, 'background');\n        \n        var music = this.sound.add('menuMusic');\n        music.setLoop(true);\n        music.play();\n\n        var button = this.add.text(100, 100, \"Play\");\n        button.setInteractive();\n        button.on('pointerdown', function(){\n            music.stop();\n            this.scene.start('game');\n        }, this);\n    },\n});*/\n\n/*var FullGame = new Phaser.Class({\n    Extends: Phaser.Scene,\n\n    initialize:\n    function FullGame(){\n        Phaser.Scene.call(this, 'game');\n    },\n\n    preload: function(){\n        this.load.image('background', background);\n        this.load.image('blue', blue);\n        this.load.image('meteor', meteor);\n        this.load.image('bigastr', bigAstroid);\n        this.load.audio('sector1', sector1Music);\n        this.load.audio('transitionSector', transitionSector);\n    },\n\n    create: function(){\n        //Background Creation\n        this.add.image(640, 360, 'background');\n        \n        //Level Init - enemies and music\n        var music;\n        if (level == 1){\n            var transitionMusic = this.sound.add('transitionSector');\n            transitionMusic.play();\n\n            /*music = this.sound.add('sector1');\n            music.setLoop(true);\n            music.play();\n\n            sendingEnemies = this.time.addEvent({ delay: delayLv1, callback: sendAsteroid, callbackScope: this, loop: true});\n            sendingBigAstr = this.time.addEvent({ delay: delayLv0, callback: sendbigAstr, callbackScope: this, loop: true});\n        }\n        else if(level == 2){\n\n        }\n        else{\n\n        }\n        \n        //Create Player and Controls\n        player = this.physics.add.image(50, 360, 'meteor');\n        cursors = this.input.keyboard.createCursorKeys();\n\n        player.setDamping(true);\n        player.setDrag(0.99);\n        player.setMaxVelocity(200);\n        player.body.collideWorldBounds = true;\n        player.body.bounce.set(1);\n    },\n\n    update: function(){\n        if (cursors.up.isDown){\n            this.physics.velocityFromRotation(player.rotation, 200, player.body.acceleration);\n        }\n        else{\n            player.setAcceleration(0);\n        }\n\n        if (cursors.left.isDown){\n            player.setAngularVelocity(-300);\n        }\n        else if (cursors.right.isDown){\n            player.setAngularVelocity(300);\n        }\n        else{\n            player.setAngularVelocity(0);\n        }\n    }\n});\n\nfunction sendAsteroid(){\n    asteroids = this.physics.add.group({\n        key: 'blue',\n        repeat: Phaser.Math.Between(0, 1),\n        setXY: {x: 1400, y: Phaser.Math.Between(50, 600), stepY: Phaser.Math.Between(75, 250)}\n    });\n\n    asteroids.children.iterate(function(child){\n        child.body.velocity.setTo(Phaser.Math.Between(-175, -100), 0);\n    })\n\n    this.physics.add.collider(player, asteroids, hitEnemy, null, this);\n}\n\nfunction sendbigAstr(){\n    bigastr = this.physics.add.group({\n        key: 'bigAstr',\n        repeat: 0,\n        setXY: {x: 1400, y: Phaser.Math.Between(50, 600), stepY: Phaser.Math.Between(75, 250)}\n    });\n\n    bigastr.children.iterate(function(child){\n        child.body.velocity.setTo(Phaser.Math.Between(-100, -50), 0);\n    })\n\n    this.physics.add.collider(player, asteroids, hitEnemy, null, this);\n\n}\n\nfunction hitEnemy(){\n    console.log(\"enemy hit\");\n    this.physics.pause();\n\n    player.setTint(0xff0000);\n\n    gameOver = true;\n}\n*/\nvar config = {\n    type: Phaser.AUTO,\n    width: 1280,\n    height: 720,\n    physics: {\n        default: \"arcade\",\n        arcade: {\n            fps: 60,\n            gravity: { y: 0 }\n        }\n    },\n    scene: [ Menu, FullGame ]\n};\n\nvar game = new Phaser.Game(config);\n"]}