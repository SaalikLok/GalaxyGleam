{"id":"index.js","dependencies":[{"name":"/Users/saaliklok/Documents/Projects/GalaxyGleam/package.json","includedInParent":true,"mtime":1532974221943},{"name":"./game/Menu","loc":{"line":1,"column":17},"parent":"/Users/saaliklok/Documents/Projects/GalaxyGleam/index.js","resolved":"/Users/saaliklok/Documents/Projects/GalaxyGleam/game/Menu.js"},{"name":"./game/FullGame","loc":{"line":2,"column":21},"parent":"/Users/saaliklok/Documents/Projects/GalaxyGleam/index.js","resolved":"/Users/saaliklok/Documents/Projects/GalaxyGleam/game/FullGame.js"}],"generated":{"js":"'use strict';\n\nvar _Menu = require('./game/Menu');\n\nvar _Menu2 = _interopRequireDefault(_Menu);\n\nvar _FullGame = require('./game/FullGame');\n\nvar _FullGame2 = _interopRequireDefault(_FullGame);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n//Assets\nvar background = require('./game/assets/menu.png');\nvar blue = require('./game/assets/blue.png');\nvar bigAstroid = require('./game/assets/bigastr.png');\nvar meteor = require('./game/assets/meteor.png');\n\n//Sounds\nvar menuMusic = require('./game/audio/mainMenu.mp3');\nvar transitionSector = require('./game/audio/tsector1.mp3');\nvar sector1Music = require('./game/audio/sector1.mp3');\n\n//Instance variables\nvar level = 1;\nvar cursors;\nvar player;\n\n//Enemy instance variables\nvar asteroids;\nvar bigastr;\n\n//Delay Timings\nvar delayLv0 = Phaser.Math.Between(15000, 20000);\nvar delayLv1 = Phaser.Math.Between(2500, 4000);\nvar delayLv2 = Phaser.Math.Between(1000, 2000);\nvar delayLv3 = Phaser.Math.Between(750, 1500);\n*/\n/*var Menu = new Phaser.Class({\n    Extends: Phaser.Scene,\n    \n    initialize:\n    function Menu(){\n        Phaser.Scene.call(this, 'menu');\n    },\n\n    preload: function(){\n        this.load.image('background', background);\n        this.load.audio('menuMusic', menuMusic);\n    },\n\n    goToGame: function(){\n        this.scene.start('game');\n    },\n\n    create: function(){\n        this.add.image(640, 360, 'background');\n        \n        var music = this.sound.add('menuMusic');\n        music.setLoop(true);\n        music.play();\n\n        var button = this.add.text(100, 100, \"Play\");\n        button.setInteractive();\n        button.on('pointerdown', function(){\n            music.stop();\n            this.scene.start('game');\n        }, this);\n    },\n});*/\n\n/*var FullGame = new Phaser.Class({\n    Extends: Phaser.Scene,\n\n    initialize:\n    function FullGame(){\n        Phaser.Scene.call(this, 'game');\n    },\n\n    preload: function(){\n        this.load.image('background', background);\n        this.load.image('blue', blue);\n        this.load.image('meteor', meteor);\n        this.load.image('bigastr', bigAstroid);\n        this.load.audio('sector1', sector1Music);\n        this.load.audio('transitionSector', transitionSector);\n    },\n\n    create: function(){\n        //Background Creation\n        this.add.image(640, 360, 'background');\n        \n        //Level Init - enemies and music\n        var music;\n        if (level == 1){\n            var transitionMusic = this.sound.add('transitionSector');\n            transitionMusic.play();\n\n            /*music = this.sound.add('sector1');\n            music.setLoop(true);\n            music.play();\n\n            sendingEnemies = this.time.addEvent({ delay: delayLv1, callback: sendAsteroid, callbackScope: this, loop: true});\n            sendingBigAstr = this.time.addEvent({ delay: delayLv0, callback: sendbigAstr, callbackScope: this, loop: true});\n        }\n        else if(level == 2){\n\n        }\n        else{\n\n        }\n        \n        //Create Player and Controls\n        player = this.physics.add.image(50, 360, 'meteor');\n        cursors = this.input.keyboard.createCursorKeys();\n\n        player.setDamping(true);\n        player.setDrag(0.99);\n        player.setMaxVelocity(200);\n        player.body.collideWorldBounds = true;\n        player.body.bounce.set(1);\n    },\n\n    update: function(){\n        if (cursors.up.isDown){\n            this.physics.velocityFromRotation(player.rotation, 200, player.body.acceleration);\n        }\n        else{\n            player.setAcceleration(0);\n        }\n\n        if (cursors.left.isDown){\n            player.setAngularVelocity(-300);\n        }\n        else if (cursors.right.isDown){\n            player.setAngularVelocity(300);\n        }\n        else{\n            player.setAngularVelocity(0);\n        }\n    }\n});\n\nfunction sendAsteroid(){\n    asteroids = this.physics.add.group({\n        key: 'blue',\n        repeat: Phaser.Math.Between(0, 1),\n        setXY: {x: 1400, y: Phaser.Math.Between(50, 600), stepY: Phaser.Math.Between(75, 250)}\n    });\n\n    asteroids.children.iterate(function(child){\n        child.body.velocity.setTo(Phaser.Math.Between(-175, -100), 0);\n    })\n\n    this.physics.add.collider(player, asteroids, hitEnemy, null, this);\n}\n\nfunction sendbigAstr(){\n    bigastr = this.physics.add.group({\n        key: 'bigAstr',\n        repeat: 0,\n        setXY: {x: 1400, y: Phaser.Math.Between(50, 600), stepY: Phaser.Math.Between(75, 250)}\n    });\n\n    bigastr.children.iterate(function(child){\n        child.body.velocity.setTo(Phaser.Math.Between(-100, -50), 0);\n    })\n\n    this.physics.add.collider(player, asteroids, hitEnemy, null, this);\n\n}\n\nfunction hitEnemy(){\n    console.log(\"enemy hit\");\n    this.physics.pause();\n\n    player.setTint(0xff0000);\n\n    gameOver = true;\n}\n*/\nvar config = {\n    type: Phaser.AUTO,\n    width: 1280,\n    height: 720,\n    physics: {\n        default: \"arcade\",\n        arcade: {\n            fps: 60,\n            gravity: { y: 0 }\n        }\n    },\n    scene: [_Menu2.default, _FullGame2.default]\n};\n\nvar game = new Phaser.Game(config);","map":{"mappings":[{"generated":{"line":3,"column":0},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":7,"column":0},"source":"index.js","original":{"line":2,"column":0}},{"generated":{"line":13,"column":0},"source":"index.js","original":{"line":4,"column":0}},{"generated":{"line":40,"column":0},"source":"index.js","original":{"line":31,"column":0}},{"generated":{"line":73,"column":0},"source":"index.js","original":{"line":64,"column":0}},{"generated":{"line":183,"column":0},"source":"index.js","original":{"line":174,"column":0}},{"name":"config","generated":{"line":183,"column":4},"source":"index.js","original":{"line":174,"column":4}},{"generated":{"line":183,"column":13},"source":"index.js","original":{"line":174,"column":13}},{"name":"type","generated":{"line":184,"column":0},"source":"index.js","original":{"line":175,"column":4}},{"name":"Phaser","generated":{"line":184,"column":10},"source":"index.js","original":{"line":175,"column":10}},{"name":"AUTO","generated":{"line":184,"column":17},"source":"index.js","original":{"line":175,"column":17}},{"generated":{"line":184,"column":21},"source":"index.js","original":{"line":174,"column":13}},{"name":"width","generated":{"line":185,"column":0},"source":"index.js","original":{"line":176,"column":4}},{"generated":{"line":185,"column":11},"source":"index.js","original":{"line":176,"column":11}},{"generated":{"line":185,"column":15},"source":"index.js","original":{"line":174,"column":13}},{"name":"height","generated":{"line":186,"column":0},"source":"index.js","original":{"line":177,"column":4}},{"generated":{"line":186,"column":12},"source":"index.js","original":{"line":177,"column":12}},{"generated":{"line":186,"column":15},"source":"index.js","original":{"line":174,"column":13}},{"name":"physics","generated":{"line":187,"column":0},"source":"index.js","original":{"line":178,"column":4}},{"generated":{"line":187,"column":13},"source":"index.js","original":{"line":178,"column":13}},{"name":"default","generated":{"line":188,"column":0},"source":"index.js","original":{"line":179,"column":8}},{"generated":{"line":188,"column":17},"source":"index.js","original":{"line":179,"column":17}},{"generated":{"line":188,"column":25},"source":"index.js","original":{"line":178,"column":13}},{"name":"arcade","generated":{"line":189,"column":0},"source":"index.js","original":{"line":180,"column":8}},{"generated":{"line":189,"column":16},"source":"index.js","original":{"line":180,"column":16}},{"name":"fps","generated":{"line":190,"column":0},"source":"index.js","original":{"line":181,"column":12}},{"generated":{"line":190,"column":17},"source":"index.js","original":{"line":181,"column":17}},{"generated":{"line":190,"column":19},"source":"index.js","original":{"line":180,"column":16}},{"name":"gravity","generated":{"line":191,"column":0},"source":"index.js","original":{"line":182,"column":12}},{"generated":{"line":191,"column":21},"source":"index.js","original":{"line":182,"column":21}},{"name":"y","generated":{"line":191,"column":23},"source":"index.js","original":{"line":182,"column":23}},{"generated":{"line":191,"column":26},"source":"index.js","original":{"line":182,"column":26}},{"generated":{"line":191,"column":27},"source":"index.js","original":{"line":182,"column":21}},{"generated":{"line":192,"column":0},"source":"index.js","original":{"line":180,"column":16}},{"generated":{"line":193,"column":0},"source":"index.js","original":{"line":178,"column":13}},{"generated":{"line":193,"column":5},"source":"index.js","original":{"line":174,"column":13}},{"name":"scene","generated":{"line":194,"column":0},"source":"index.js","original":{"line":185,"column":4}},{"generated":{"line":194,"column":11},"source":"index.js","original":{"line":185,"column":11}},{"name":"Menu","generated":{"line":194,"column":12},"source":"index.js","original":{"line":185,"column":13}},{"generated":{"line":194,"column":26},"source":"index.js","original":{"line":185,"column":11}},{"name":"FullGame","generated":{"line":194,"column":28},"source":"index.js","original":{"line":185,"column":19}},{"generated":{"line":194,"column":46},"source":"index.js","original":{"line":185,"column":11}},{"generated":{"line":195,"column":0},"source":"index.js","original":{"line":174,"column":13}},{"generated":{"line":195,"column":1},"source":"index.js","original":{"line":174,"column":0}},{"generated":{"line":197,"column":0},"source":"index.js","original":{"line":188,"column":0}},{"name":"game","generated":{"line":197,"column":4},"source":"index.js","original":{"line":188,"column":4}},{"generated":{"line":197,"column":11},"source":"index.js","original":{"line":188,"column":11}},{"name":"Phaser","generated":{"line":197,"column":15},"source":"index.js","original":{"line":188,"column":15}},{"name":"Game","generated":{"line":197,"column":22},"source":"index.js","original":{"line":188,"column":22}},{"generated":{"line":197,"column":26},"source":"index.js","original":{"line":188,"column":11}},{"name":"config","generated":{"line":197,"column":27},"source":"index.js","original":{"line":188,"column":27}},{"generated":{"line":197,"column":33},"source":"index.js","original":{"line":188,"column":11}},{"generated":{"line":197,"column":34},"source":"index.js","original":{"line":188,"column":0}}],"sources":{"index.js":"import Menu from './game/Menu';\nimport FullGame from './game/FullGame';\n\n/*\n//Assets\nvar background = require('./game/assets/menu.png');\nvar blue = require('./game/assets/blue.png');\nvar bigAstroid = require('./game/assets/bigastr.png');\nvar meteor = require('./game/assets/meteor.png');\n\n//Sounds\nvar menuMusic = require('./game/audio/mainMenu.mp3');\nvar transitionSector = require('./game/audio/tsector1.mp3');\nvar sector1Music = require('./game/audio/sector1.mp3');\n\n//Instance variables\nvar level = 1;\nvar cursors;\nvar player;\n\n//Enemy instance variables\nvar asteroids;\nvar bigastr;\n\n//Delay Timings\nvar delayLv0 = Phaser.Math.Between(15000, 20000);\nvar delayLv1 = Phaser.Math.Between(2500, 4000);\nvar delayLv2 = Phaser.Math.Between(1000, 2000);\nvar delayLv3 = Phaser.Math.Between(750, 1500);\n*/\n/*var Menu = new Phaser.Class({\n    Extends: Phaser.Scene,\n    \n    initialize:\n    function Menu(){\n        Phaser.Scene.call(this, 'menu');\n    },\n\n    preload: function(){\n        this.load.image('background', background);\n        this.load.audio('menuMusic', menuMusic);\n    },\n\n    goToGame: function(){\n        this.scene.start('game');\n    },\n\n    create: function(){\n        this.add.image(640, 360, 'background');\n        \n        var music = this.sound.add('menuMusic');\n        music.setLoop(true);\n        music.play();\n\n        var button = this.add.text(100, 100, \"Play\");\n        button.setInteractive();\n        button.on('pointerdown', function(){\n            music.stop();\n            this.scene.start('game');\n        }, this);\n    },\n});*/\n\n/*var FullGame = new Phaser.Class({\n    Extends: Phaser.Scene,\n\n    initialize:\n    function FullGame(){\n        Phaser.Scene.call(this, 'game');\n    },\n\n    preload: function(){\n        this.load.image('background', background);\n        this.load.image('blue', blue);\n        this.load.image('meteor', meteor);\n        this.load.image('bigastr', bigAstroid);\n        this.load.audio('sector1', sector1Music);\n        this.load.audio('transitionSector', transitionSector);\n    },\n\n    create: function(){\n        //Background Creation\n        this.add.image(640, 360, 'background');\n        \n        //Level Init - enemies and music\n        var music;\n        if (level == 1){\n            var transitionMusic = this.sound.add('transitionSector');\n            transitionMusic.play();\n\n            /*music = this.sound.add('sector1');\n            music.setLoop(true);\n            music.play();\n\n            sendingEnemies = this.time.addEvent({ delay: delayLv1, callback: sendAsteroid, callbackScope: this, loop: true});\n            sendingBigAstr = this.time.addEvent({ delay: delayLv0, callback: sendbigAstr, callbackScope: this, loop: true});\n        }\n        else if(level == 2){\n\n        }\n        else{\n\n        }\n        \n        //Create Player and Controls\n        player = this.physics.add.image(50, 360, 'meteor');\n        cursors = this.input.keyboard.createCursorKeys();\n\n        player.setDamping(true);\n        player.setDrag(0.99);\n        player.setMaxVelocity(200);\n        player.body.collideWorldBounds = true;\n        player.body.bounce.set(1);\n    },\n\n    update: function(){\n        if (cursors.up.isDown){\n            this.physics.velocityFromRotation(player.rotation, 200, player.body.acceleration);\n        }\n        else{\n            player.setAcceleration(0);\n        }\n\n        if (cursors.left.isDown){\n            player.setAngularVelocity(-300);\n        }\n        else if (cursors.right.isDown){\n            player.setAngularVelocity(300);\n        }\n        else{\n            player.setAngularVelocity(0);\n        }\n    }\n});\n\nfunction sendAsteroid(){\n    asteroids = this.physics.add.group({\n        key: 'blue',\n        repeat: Phaser.Math.Between(0, 1),\n        setXY: {x: 1400, y: Phaser.Math.Between(50, 600), stepY: Phaser.Math.Between(75, 250)}\n    });\n\n    asteroids.children.iterate(function(child){\n        child.body.velocity.setTo(Phaser.Math.Between(-175, -100), 0);\n    })\n\n    this.physics.add.collider(player, asteroids, hitEnemy, null, this);\n}\n\nfunction sendbigAstr(){\n    bigastr = this.physics.add.group({\n        key: 'bigAstr',\n        repeat: 0,\n        setXY: {x: 1400, y: Phaser.Math.Between(50, 600), stepY: Phaser.Math.Between(75, 250)}\n    });\n\n    bigastr.children.iterate(function(child){\n        child.body.velocity.setTo(Phaser.Math.Between(-100, -50), 0);\n    })\n\n    this.physics.add.collider(player, asteroids, hitEnemy, null, this);\n\n}\n\nfunction hitEnemy(){\n    console.log(\"enemy hit\");\n    this.physics.pause();\n\n    player.setTint(0xff0000);\n\n    gameOver = true;\n}\n*/\nvar config = {\n    type: Phaser.AUTO,\n    width: 1280,\n    height: 720,\n    physics: {\n        default: \"arcade\",\n        arcade: {\n            fps: 60,\n            gravity: { y: 0 }\n        }\n    },\n    scene: [ Menu, FullGame ]\n};\n\nvar game = new Phaser.Game(config);\n"},"lineCount":null}},"hash":"d76547cad13e6874dbab8e9d90c9e112","cacheData":{"env":{}}}